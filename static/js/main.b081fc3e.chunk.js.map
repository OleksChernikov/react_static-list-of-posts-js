{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","id","length","map","UserInfo","user","PostInfo","info","title","PostList","allInfo","postsFromServer","post","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"i18IAEaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IACtC,OACD,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCfIG,G,MAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpBC,EAAOD,EAAPC,GAER,OACE,qBAAKJ,UAAU,cAAf,SACGG,GAAYA,EAASE,OAAS,EAAIF,EAASG,KAAI,SAAAV,GAAO,OACrD,cAAC,EAAD,CAAsBA,QAASA,GAAbQ,MACf,mBAAG,UAAQ,oBAAX,iCCREG,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBV,EAAgBU,EAAhBV,MAAOD,EAASW,EAATX,KAEf,OACE,mBAAGG,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,MCHMY,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBF,EAAgCE,EAAhCF,KAAML,EAA0BO,EAA1BP,SAAUQ,EAAgBD,EAAhBC,MAAOZ,EAASW,EAATX,KAE/B,OACE,qBAAKC,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IACjC,8BACG,eACD,cAAC,EAAD,CAAUH,KAAMA,OAElB,mBAAGR,UAAU,iBAAb,SACGD,IAGH,uBAEA,cAAC,EAAD,CACEI,SAAUA,WCpBPS,EAAW,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjBT,EAAOS,EAAPT,GAER,OACE,qBAAKJ,UAAU,WAAf,SACGa,EAAQP,KAAI,SAAAI,GAAI,OACf,cAAC,EAAD,CAEEA,KAAMA,GADDN,SCQR,IAAMS,EAAUC,EAAgBR,KAAI,SAAAS,GAAI,kCAC1CA,GAD0C,IAE7CP,MAZmBQ,EAYDD,EAAKC,OAXhBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKJ,KAAOY,MAC3C,MAWLb,UAR2BgB,EAQGJ,EAAKX,GAP5BgB,EAAmBC,QAAO,SAAAzB,GAAO,OAAIA,EAAQuB,SAAWA,MAC1D,QAFP,IAA6BA,EALRH,KAgBRM,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CACEa,QAASA,QCxBfU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b081fc3e.chunk.js","sourcesContent":["import React from 'react';\n\nexport const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n        {' by '}\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => {\n  const { id } = comments;\n\n  return (\n    <div className=\"CommentList\">\n      {comments && comments.length > 0 ? comments.map(comment => (\n        <CommentInfo key={id} comment={comment} />\n      )) : <b data-cy=\"NoCommentsMessage\">No comments yet</b>}\n    </div>\n  );\n};\n","import React from 'react';\nimport './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ info }) => {\n  const { user, comments, title, body } = info;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n        <p>\n          {' Posted by  '}\n          <UserInfo user={user} />\n        </p>\n        <p className=\"PostInfo__body\">\n          {body}\n        </p>\n\n        <hr />\n\n        <CommentList\n          comments={comments}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ allInfo }) => {\n  const { id } = allInfo;\n\n  return (\n    <div className=\"PostList\">\n      {allInfo.map(info => (\n        <PostInfo\n          key={id}\n          info={info}\n        />\n      ))}\n    </div>\n  );\n};\n","import './App.scss';\nimport React from 'react';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getCommentsByPostId(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n    || null;\n}\n\nexport const allInfo = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsByPostId(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList\n      allInfo={allInfo}\n    />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}